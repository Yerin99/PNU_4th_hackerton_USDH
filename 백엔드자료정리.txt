> 수정중 ... 

사용 database: firestore database

사용하는 패키지의 버전 정보:
  firebase_core: ^1.3.0
  firebase_auth: ^2.0.0
  cloud_firestore: ^2.3.0
  firebase_storage : ^9.0.0
  image_picker : ^0.8.1+3
  
개발 진행상황 및 계획: 
  1. 개발 계획
    firebase와 flutter를 사용하여 회원 관리 기능, 채팅 기능, 게시물 작성 기능 등을 구현
    현재 firestore database와의 연결은 완료됐고, 구체적인 기능들(챗, 게시물관리)에대해 각각 적당한
    데이터로 가공한 뒤 저장하는 기능을 구현하기만 하면 됨.

    // 게시물 작성 및 확인     
    게시물 작성 및 채팅에서의 사진사용 - 사용자로부터 image picker로 카메라를 이용해 촬영하거나 갤러리에 있는 사진을 받
    입력 받아서 이를 firebase storage에 업로드하고, 게시물 등에서 보여 줄때 해당 파일을 불러와 출력하는 식으로 구현할 예정.
    -> 게시물에서 요구되는 여러개의 사진을 받기 위해 multi-image_picker을 사용할 계획.

    //부가적인 내용
    개발을 진행하면서 필요시 firestore 말고도 다른 데이터베이스를 사용할 계획이다.
    (firestore는 읽기 쓰기 제한이 있어 사용자가 많아질 경우에 문제가 생길 수 있음)
    적절한 지도 api도 채택하여 추후 개발에 활용할 계획이다.
  
  2. 개발 진행도
    // 회원가입, 로그인
    계정 생성시 요구되는 정보 - 이메일, 비밀번호, 성별(추가예정), 이름, 학과, 학번
    -> fire_auth에서 로그인시 인증 정보(이메일, 비밀번호), firestore에서 유저 정보(이름, 학과, 학번) 따로 구분하여 관리
    
    이메일 인증- 이메일 중복시 가입제한, 이메일이 부산대학교 이메일이 아닐시 가입 제한, 비밀번호가 6자 이하일시 가입 제한
    계정 생성 이후 이메일을 인증하여야만 로그인이 가능함.
    비밀번호 재설정이 필요할시 메일 인증을 통해 수행하게 함.
    계정 삭제시 firestore와 인증 정보에서 삭제되게 구현함.
    
    // 게시글 작성
    유저들이 작성한 게시글 내용을 유저별로 firebase storage와 firestore에서 관리.
    게시글 생성시 db에 저장되는 내용 - 게시물 제목, 게시물 내용, 업로드한 사진 파일 링크, 작성자, 등이 포함됨. (이후에 카테고리라던지
    추가할 내용이 있으면 field를 더 늘리게 구현할 예정)
